# Firebase Configuration
# Copy this file to .env and fill in your actual Firebase project values
# Get these values from your Firebase project settings (Project Settings > General > Your apps)

# Firebase API Key - Used to authenticate requests to Firebase services
REACT_APP_FIREBASE_API_KEY=your_firebase_api_key_here

# Firebase Auth Domain - Domain for your Firebase project's authentication services
REACT_APP_FIREBASE_AUTH_DOMAIN=your_project_id.firebaseapp.com

# Firebase Project ID - Unique identifier for your Firebase project
REACT_APP_FIREBASE_PROJECT_ID=your_project_id_here

# Firebase Storage Bucket - Default bucket for Firebase Storage
REACT_APP_FIREBASE_STORAGE_BUCKET=your_project_id.appspot.com

# Firebase Messaging Sender ID - ID for Firebase Cloud Messaging
REACT_APP_FIREBASE_MESSAGING_SENDER_ID=your_messaging_sender_id_here

# Firebase App ID - Unique identifier for your web app within the Firebase project
REACT_APP_FIREBASE_APP_ID=your_app_id_here

# Firebase Database URL (Optional - only needed if using Realtime Database instead of Firestore)
# REACT_APP_FIREBASE_DATABASE_URL=https://your_project_id-default-rtdb.firebaseio.com/

# Environment Configuration
# Set to 'development' for local, 'staging' for staging, 'production' for production
REACT_APP_ENVIRONMENT=development

# Deployment URLs (set in Vercel dashboard for each environment)
# REACT_APP_VERCEL_URL=https://your-app-staging.vercel.app

# Testing Configuration  
REACT_APP_ENABLE_TESTING_TOOLS=true
REACT_APP_DEBUG_MODE=false

# Optional: Custom configuration
# REACT_APP_APP_NAME=Employee Registration System
# REACT_APP_VERSION=1.0.0

# =============================================================================
# VERCEL DEPLOYMENT CONFIGURATION
# =============================================================================

# Vercel Secrets (for GitHub Actions CI/CD)
# These are used by GitHub Actions workflows for automated Vercel CLI deployment
# 
# VERCEL_TOKEN=vercel_xxxxxxxxxxxxxxxxxx                # Set in GitHub Secrets - API token
# VERCEL_ORG_ID=team_xxxxxxxxxxxxxxxxxxxxxxx            # Set in GitHub Secrets - Team ID from dashboard  
# VERCEL_STAGING_PROJECT_ID=prj_xxxxxxxxxxxxxxxxxx      # Set in GitHub Secrets - Staging project ID
# VERCEL_PRODUCTION_PROJECT_ID=prj_xxxxxxxxxxxxxxxxxx   # Set in GitHub Secrets - Production project ID
#
# Note: These are NOT environment variables for the app itself, but secrets
# used by GitHub Actions workflows with official Vercel CLI for automated deployment

# Deployment URLs (automatically set by Vercel)
# VERCEL_URL=https://your-app-git-staging-username.vercel.app (staging)
# VERCEL_URL=https://your-app.vercel.app (production)

# =============================================================================
# GITHUB ACTIONS CI/CD CONFIGURATION  
# =============================================================================

# GitHub Actions workflows use official Vercel CLI for deployment:
# - staging.yml: Install Vercel CLI → Pull env → Build → Deploy (preview mode)
# - production.yml: Install Vercel CLI → Pull env → Build → Deploy (production mode)  
# - testing.yml: Uses STAGING_REACT_APP_FIREBASE_* secrets for E2E tests
#
# Deployment Process:
# 1. Push to 'staging' branch → Triggers staging.yml → Deploy to staging Vercel project
# 2. Push to 'main' branch → Triggers production.yml → Deploy to production Vercel project
# 3. Vercel CLI handles Firebase environment variable injection automatically

# Security Notes:
# 1. Never commit the actual .env file to your repository
# 2. All REACT_APP_ prefixed variables will be embedded in the build and visible to users
# 3. Firebase API keys are safe to expose in frontend applications (they identify your project)
# 4. Use Firebase Security Rules to control data access, not environment variables
# 5. GitHub Actions workflows use official Vercel CLI with proper environment handling
# 6. Vercel secrets (VERCEL_TOKEN, VERCEL_ORG_ID, project IDs) stored in GitHub repository secrets only